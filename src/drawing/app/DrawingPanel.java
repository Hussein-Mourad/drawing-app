/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package drawing.app;

import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.Graphics2D;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JToggleButton;

/**
 *
 * @author hussein
 */
public class DrawingPanel extends javax.swing.JPanel {

    ShapesEnum action;
    DrawingPanelController controller = new DrawingPanelController(this);

    /**
     * Creates new form NewJPanel
     */
    public DrawingPanel() {

        initComponents();
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2D = (Graphics2D) g;
        g2D.setColor(controller.getColor());
        g2D.fillRect(
                colorPickerButton.getX() + colorPickerButton.getWidth() + 10,
                colorPickerButton.getY() + 4,
                20,
                20
        );

        for (Rectangle rectangle : controller.getRectangles()) {
            rectangle.draw(this, g2D);
        }

        for (Square square : controller.getSquares()) {
            square.draw(this, g2D);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        squareButton = new javax.swing.JToggleButton();
        rectangleButton = new javax.swing.JToggleButton();
        strokeDropDown = new javax.swing.JComboBox<>();
        colorPickerButton = new javax.swing.JButton();

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                DrawingPanel.this.mouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DrawingPanel.this.mousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                DrawingPanel.this.mouseReleased(evt);
            }
        });

        squareButton.setText("Square");
        squareButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareButtonActionPerformed(evt);
            }
        });

        rectangleButton.setText("Rectangle");
        rectangleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rectangleButtonActionPerformed(evt);
            }
        });

        strokeDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "5", "10", "24" }));
        strokeDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                strokeDropDownActionPerformed(evt);
            }
        });

        colorPickerButton.setText("choose color");
        colorPickerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorPickerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(rectangleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(squareButton)
                .addGap(26, 26, 26)
                .addComponent(strokeDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(colorPickerButton)
                .addContainerGap(258, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rectangleButton)
                    .addComponent(squareButton)
                    .addComponent(strokeDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(colorPickerButton))
                .addContainerGap(360, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mousePressed
        controller.mousePressed(evt, action);
    }//GEN-LAST:event_mousePressed

    private void mouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseReleased
        controller.mouseReleased(evt);
    }//GEN-LAST:event_mouseReleased

    private void mouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseDragged
        controller.mouseDragged(evt, action);
    }//GEN-LAST:event_mouseDragged

    private void squareButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squareButtonActionPerformed
        action = ShapesEnum.SQUARE;
        this.setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
    }//GEN-LAST:event_squareButtonActionPerformed

    private void rectangleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rectangleButtonActionPerformed
        action = ShapesEnum.RECTANGLE;
        this.setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
    }//GEN-LAST:event_rectangleButtonActionPerformed

    private void strokeDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_strokeDropDownActionPerformed
        int stroke = Integer.valueOf((String) strokeDropDown.getSelectedItem());
        controller.setStroke(stroke);
    }//GEN-LAST:event_strokeDropDownActionPerformed

    private void colorPickerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorPickerButtonActionPerformed
        controller.colorPicker();
    }//GEN-LAST:event_colorPickerButtonActionPerformed

    public JButton getColorPickerButton() {
        return colorPickerButton;
    }

    public void setColorPickerButton(JButton colorPickerButton) {
        this.colorPickerButton = colorPickerButton;
    }

    public JToggleButton getRectangleButton() {
        return rectangleButton;
    }

    public void setRectangleButton(JToggleButton rectangleButton) {
        this.rectangleButton = rectangleButton;
    }

    public JToggleButton getSquareButton() {
        return squareButton;
    }

    public void setSquareButton(JToggleButton squareButton) {
        this.squareButton = squareButton;
    }

    public JComboBox<String> getStrokeDropDown() {
        return strokeDropDown;
    }

    public void setStrokeDropDown(JComboBox<String> strokeDropDown) {
        this.strokeDropDown = strokeDropDown;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton colorPickerButton;
    private javax.swing.JToggleButton rectangleButton;
    private javax.swing.JToggleButton squareButton;
    private javax.swing.JComboBox<String> strokeDropDown;
    // End of variables declaration//GEN-END:variables
}
